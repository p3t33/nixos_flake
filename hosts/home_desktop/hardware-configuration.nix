# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "ehci_pci" "ahci" "xhci_pci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" "wl" ];
  boot.extraModulePackages = [ config.boot.kernelPackages.broadcom_sta ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/d2b4464a-35e3-4cc6-9d5a-bd4e85345d1c";
      fsType = "ext4";
    };



  fileSystems."/media/data" =
  {
      device = "/dev/disk/by-uuid/E694DE4994DE1BBD";
      fsType = "ntfs";
      options = [ "rw" "umask=000" ];
  };

  boot.initrd.luks.devices."luks-01b11c05-22ec-4569-b265-29e1ca00b72b".device = "/dev/disk/by-uuid/01b11c05-22ec-4569-b265-29e1ca00b72b";

  swapDevices =
    [ { device = "/dev/disk/by-uuid/569daae8-1131-42e2-8c8c-e43b2584b1a3"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
